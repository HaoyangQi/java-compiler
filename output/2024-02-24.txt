===== COMPILER RUNTIME REPORT =====
Language version: 1
Reserved word:
    count: 50
    memory: 4424 bytes
    load factor: 14.16%
    longest chain: 1
Expression static data size: 1072 bytes
Error static data size: 574 bytes
===== END OF REPORT =====

File 1: ./test/simple.txt
===== ABSTRACT SYNTAX TREE =====
Compilation Unit
  Package Declaration
    Name
      Unit: mypack
  Import Declaration (On-demand: false)
    Name
      Unit: java
      Unit: text
      Unit: DecimalFormat
  Import Declaration (On-demand: false)
    Name
      Unit: java
      Unit: util
      Unit: InputMismatchException
  Import Declaration (On-demand: false)
    Name
      Unit: java
      Unit: util
      Unit: Scanner
  Import Declaration (On-demand: true)
    Name
      Unit: somepackage
  Top Level: No Modifier
    Class Declaration: MyPackageClass
      Class Extends
        Class Type
          Unit: C1
      Class Implements
        Interface Type List
          Interface Type
            Unit: C2
          Interface Type
            Unit: C3
      Class Body
        Class Body Declaration: No Modifier
          Type: JLT_RWD_INT
          Variable Declarators
            Variable Declarator: r2
              Expression
                Primary
                  1
                Primary
                  2
                OP[19]: OPID_GREAT -> JLT_SYM_ANGLE_BRACKET_CLOSE ">"
                Primary
                  3
                Primary
                  4
                Primary
                  5
                OP[9]: OPID_MUL -> JLT_SYM_ASTERISK "*"
                OP[12]: OPID_ADD -> JLT_SYM_PLUS "+"
                Primary
                  6
                Primary
                  7
                OP[13]: OPID_SUB -> JLT_SYM_MINUS "-"
                OP[30]: OPID_TERNARY_2 -> JLT_SYM_COLON ":"
                OP[29]: OPID_TERNARY_1 -> JLT_SYM_QUESTION "?"
        Class Body Declaration: No Modifier
          Type: JLT_RWD_INT
          Variable Declarators
            Variable Declarator: r3
              Expression
                Primary
                  0
        Class Body Declaration: No Modifier
          Type: JLT_RWD_SHORT
          Variable Declarators
            Variable Declarator: r4
        Class Body Declaration: No Modifier
          Type: JLT_RWD_VOID
          Method Declaration
            Method Header: logic
            Method Body
              Block
                Expression Statement
                  Expression
                    Primary
                      1
                    Primary
                      2
                    OP[28]: OPID_LOGIC_OR -> JLT_SYM_LOGIC_OR "||"
                    Primary
                      3
                    Primary
                      4
                    OP[12]: OPID_ADD -> JLT_SYM_PLUS "+"
                    OP[28]: OPID_LOGIC_OR -> JLT_SYM_LOGIC_OR "||"
        Class Body Declaration: private
          Type: JLT_RWD_INT
          Method Declaration
            Method Header: calc
              Formal Parameter List
                Formal Parameter: x
                  Type: JLT_RWD_INT
                Formal Parameter: y
                  Type: JLT_RWD_INT
                Formal Parameter: r2
                  Type: JLT_RWD_SHORT
            Method Body
              Block
                While Statement
                  Expression
                    Primary
                      x
                    Primary
                      y
                    OP[19]: OPID_GREAT -> JLT_SYM_ANGLE_BRACKET_CLOSE ">"
                  Block
                    If Statement
                      Expression
                        Primary
                          4
                        Primary
                          9
                        OP[22]: OPID_EQ -> JLT_SYM_RELATIONAL_EQUAL "=="
                      Break Statement: (null)
                    Expression Statement
                      Expression
                        Primary
                          x
                        OP[2]: OPID_POST_DEC -> JLT_SYM_DECREMENT "--"
                    If Statement
                      Expression
                        Primary
                          6
                        Primary
                          2
                        OP[20]: OPID_GREAT_EQ -> JLT_SYM_GREATER_EQUAL ">="
                      Block
                        Continue Statement: (null)
                If Statement
                  Expression
                    Primary
                      2
                    Primary
                      1
                    OP[19]: OPID_GREAT -> JLT_SYM_ANGLE_BRACKET_CLOSE ">"
                  Block
                    Expression Statement
                      Expression
                        Primary
                          x
                        Primary
                          y
                        OP[12]: OPID_ADD -> JLT_SYM_PLUS "+"
                    Expression Statement
                      Expression
                        Primary
                          r3
                        Primary
                          r2
                        Primary
                          6
                        OP[13]: OPID_SUB -> JLT_SYM_MINUS "-"
                        Primary
                          y
                        OP[12]: OPID_ADD -> JLT_SYM_PLUS "+"
                        OP[31]: OPID_ASN -> JLT_SYM_EQUAL "="
                    Return Statement
                      Expression
                        Primary
                          3
                  If Statement
                    Expression
                      Primary
                        r2
                      Primary
                        x
                      OP[17]: OPID_LESS -> JLT_SYM_ANGLE_BRACKET_OPEN "<"
                    Block
                      Variable Declaration
                        Local Variable Declaration
                          Type: JLT_RWD_INT
                          Variable Declarators
                            Variable Declarator: tmp
                              Expression
                                Primary
                                  9
                      Expression Statement
                        Expression
                          Primary
                            y
                          Primary
                            2
                          OP[32]: OPID_ADD_ASN -> JLT_SYM_ADD_ASSIGNMENT "+="
                      Variable Declaration
                        Local Variable Declaration
                          Type: JLT_RWD_INT
                          Variable Declarators
                            Variable Declarator: tmp2
                      Expression Statement
                        Expression
                          Primary
                            tmp
                          Primary
                            tmp
                          Primary
                            y
                          Primary
                            9
                          OP[9]: OPID_MUL -> JLT_SYM_ASTERISK "*"
                          OP[13]: OPID_SUB -> JLT_SYM_MINUS "-"
                          OP[31]: OPID_ASN -> JLT_SYM_EQUAL "="
                      Return Statement
                        Expression
                          Primary
                            tmp2
                    Block
                      Return Statement
                        Expression
                          Primary
                            r3
                While Statement
                  Expression
                    Primary
                      x
                    Primary
                      y
                    OP[17]: OPID_LESS -> JLT_SYM_ANGLE_BRACKET_OPEN "<"
                  Block
                    Expression Statement
                      Expression
                        Primary
                          x
                        OP[1]: OPID_POST_INC -> JLT_SYM_INCREMENT "++"
                Return Statement
                  Expression
                    Primary
                      0
        Class Body Declaration: No Modifier
          Type: JLT_RWD_VOID
          Method Declaration
            Method Header: loop_do_while
            Method Body
              Block
                Variable Declaration
                  Local Variable Declaration
                    Type: JLT_RWD_INT
                    Variable Declarators
                      Variable Declarator: x
                Variable Declaration
                  Local Variable Declaration
                    Type: JLT_RWD_INT
                    Variable Declarators
                      Variable Declarator: y
                Do-While Statement
                  Block
                    If Statement
                      Expression
                        Primary
                          4
                        Primary
                          9
                        OP[22]: OPID_EQ -> JLT_SYM_RELATIONAL_EQUAL "=="
                      Break Statement: (null)
                    Expression Statement
                      Expression
                        Primary
                          x
                        OP[2]: OPID_POST_DEC -> JLT_SYM_DECREMENT "--"
                    If Statement
                      Expression
                        Primary
                          6
                        Primary
                          2
                        OP[20]: OPID_GREAT_EQ -> JLT_SYM_GREATER_EQUAL ">="
                      Block
                        Continue Statement: (null)
                  Expression
                    Primary
                      x
                    Primary
                      y
                    OP[19]: OPID_GREAT -> JLT_SYM_ANGLE_BRACKET_CLOSE ">"
        Class Body Declaration: No Modifier
          Type: JLT_RWD_VOID
          Method Declaration
            Method Header: loop_for
            Method Body
              Block
                Variable Declaration
                  Local Variable Declaration
                    Type: JLT_RWD_INT
                    Variable Declarators
                      Variable Declarator: x
                Variable Declaration
                  Local Variable Declaration
                    Type: JLT_RWD_INT
                    Variable Declarators
                      Variable Declarator: y
                For Statement
                  For Initialization
                    Local Variable Declaration
                      Type: JLT_RWD_INT
                      Variable Declarators
                        Variable Declarator: a
                          Expression
                            Primary
                              0
                        Variable Declarator: b
                  Expression
                    Primary
                      a
                    Primary
                      b
                    OP[19]: OPID_GREAT -> JLT_SYM_ANGLE_BRACKET_CLOSE ">"
                    Primary
                      2
                    Primary
                      y
                    OP[27]: OPID_LOGIC_AND -> JLT_SYM_LOGIC_AND "&&"
                    OP[28]: OPID_LOGIC_OR -> JLT_SYM_LOGIC_OR "||"
                  For Update
                    Expression List
                      Expression
                        Primary
                          a
                        OP[1]: OPID_POST_INC -> JLT_SYM_INCREMENT "++"
                      Expression
                        Primary
                          b
                        OP[1]: OPID_POST_INC -> JLT_SYM_INCREMENT "++"
                      Expression
                        Primary
                          y
                        OP[1]: OPID_POST_INC -> JLT_SYM_INCREMENT "++"
                  Block
                    If Statement
                      Expression
                        Primary
                          4
                        Primary
                          9
                        OP[22]: OPID_EQ -> JLT_SYM_RELATIONAL_EQUAL "=="
                      Break Statement: (null)
                    Expression Statement
                      Expression
                        Primary
                          x
                        OP[2]: OPID_POST_DEC -> JLT_SYM_DECREMENT "--"
                    If Statement
                      Expression
                        Primary
                          6
                        Primary
                          2
                        OP[20]: OPID_GREAT_EQ -> JLT_SYM_GREATER_EQUAL ">="
                      Block
                        Continue Statement: (null)
        Class Body Declaration: public static
          Type: JLT_RWD_VOID
          Method Declaration
            Method Header: basic
            Method Body
              Block
===== ON-DEMAND IMPORT PACKAGES =====
memory: 120 bytes
load factor: 9.09%
longest chain: 1
    somepackage
===== MEMBER INITIALIZATION =====

===== CONTROL FLOW GRAPH =====
node[0] (entry point) <ANY> -> 1
    [00000183C335EB50][0]: (li: 0x1{1}) IROP_GT (li: 0x2{2})
    [00000183C335E290][0]: (li: 0x4{4}) IROP_MUL (li: 0x5{5})
    [00000183C335E610][0]: (li: 0x3{3}) IROP_ADD (inst: 00000183C335E290)
    [00000183C335DED0][0]: (li: 0x6{6}) IROP_SUB (li: 0x7{7})
    [00000183C335E750][0]: (inst: 00000183C335E610) IROP_TB (inst: 00000183C335DED0)
    [00000183C335E390][0]: (inst: 00000183C335EB50) IROP_TC (inst: 00000183C335E750)
    [00000183C335E150][0]: (def: 00000183C335ED50) <- (inst: 00000183C335E390) IROP_ASN (null)
node[1] <ANY>
    [00000183C335E5D0][1]: (li: 0x0{0}) IROP_STORE (null)
    [00000183C335DE50][1]: (def: 00000183C335EDC0) <- (inst: 00000183C335E5D0) IROP_ASN (null)
    [00000183C335E590][1]: (def: 00000183C335EE30) <- (null) IROP_INIT (null)
>>>>> SUMMARY <<<<<
node count: 2
node arr size: 2
edge count: 1
edge arr size: 2
instruction count: 10
memory size: 864 bytes
===== GLOBAL NAMES =====
memory: 560 bytes
load factor: 54.55%
longest chain: 3
    MyPackageClass:
      [0](00000183C3350940): class, Access: No Modifier extends C1 implements C2,C3
    calc:
      [0](00000183C335EF10): def method, Access: private, Return: JLT_RWD_INT

===== CONTROL FLOW GRAPH =====
node[0] (entry point) <TEST> -> 1(FALSE) -> 2(TRUE)
    [00000183C335EAD0][0]: (def: 00000183C335F790) IROP_GT (def: 00000183C335F250)
    [00000183C335DF90][0]: (null) IROP_TEST (null)
node[1] <TEST> -> 9(TRUE) -> 12(FALSE)
    [00000183C335E8D0][1]: (li: 0x2{2}) IROP_GT (li: 0x1{1})
    [00000183C335E350][1]: (null) IROP_TEST (null)
node[2] <ANY> -> 3
    (no instructions)
node[3] <TEST> -> 4(TRUE) -> 5(FALSE)
    [00000183C335E810][3]: (li: 0x4{4}) IROP_EQ (li: 0x9{9})
    [00000183C335E110][3]: (null) IROP_TEST (null)
node[4] <BREAK> -> 1(JMP) -> 5
    [00000183C335E890][4]: (null) IROP_JMP (null)
node[5] <TEST> -> 6(TRUE) -> 8(FALSE)
    [00000183C335E7D0][5]: (null) IROP_ADEC (def: 00000183C335F790)
    [00000183C335E1D0][5]: (li: 0x6{6}) IROP_GE (li: 0x2{2})
    [00000183C335E2D0][5]: (null) IROP_TEST (null)
node[6] <ANY> -> 7
    (no instructions)
node[7] <CONTINUE> -> 0(JMP) -> 8
    [00000183C335EB10][7]: (null) IROP_JMP (null)
node[8] <ANY> -> 0(JMP)
    (no instructions)
node[9] <ANY> -> 10
    (no instructions)
node[10] <RETURN> -> 11
    [00000183C335E190][10]: (def: 00000183C335F790) IROP_ADD (def: 00000183C335F250)
    [00000183C335E650][10]: (def: 00000183C335F4F0) IROP_SUB (li: 0x6{6})
    [00000183C335E010][10]: (inst: 00000183C335E650) IROP_ADD (def: 00000183C335F250)
    [00000183C335E950][10]: (def: 00000183C335EDC0) <- (inst: 00000183C335E010) IROP_ASN (null)
    [00000183C335E990][10]: (li: 0x3{3}) IROP_STORE (null)
    [00000183C335EC50][10]: (inst: 00000183C335E990) IROP_RET (null)
node[11] <TEST> -> 18(FALSE) -> 19(TRUE)
    [00000183C3362F40][11]: (def: 00000183C335F790) IROP_LT (def: 00000183C335F250)
    [00000183C3362E40][11]: (null) IROP_TEST (null)
node[12] <TEST> -> 13(TRUE) -> 16(FALSE)
    [00000183C335E910][12]: (def: 00000183C335F4F0) IROP_LT (def: 00000183C335F790)
    [00000183C335E450][12]: (null) IROP_TEST (null)
node[13] <ANY> -> 14
    (no instructions)
node[14] <RETURN> -> 15
    [00000183C335DDD0][14]: (li: 0x9{9}) IROP_STORE (null)
    [00000183C335E050][14]: (def: 00000183C335F560) <- (inst: 00000183C335DDD0) IROP_ASN (null)
    [00000183C3362C40][14]: (def: 00000183C335F250) <- (def: 00000183C335F250) IROP_ADD (li: 0x2{2})
    [00000183C3362580][14]: (def: 00000183C335F5D0) <- (null) IROP_INIT (null)
    [00000183C33626C0][14]: (def: 00000183C335F250) IROP_MUL (li: 0x9{9})
    [00000183C3363300][14]: (def: 00000183C335F560) IROP_SUB (inst: 00000183C33626C0)
    [00000183C3362740][14]: (def: 00000183C335F560) <- (inst: 00000183C3363300) IROP_ASN (null)
    [00000183C3362B40][14]: (def: 00000183C335F5D0) IROP_STORE (null)
    [00000183C3362780][14]: (inst: 00000183C3362B40) IROP_RET (null)
node[15] <ANY> -> 11
    (no instructions)
node[16] <ANY> -> 17
    (no instructions)
node[17] <RETURN> -> 15
    [00000183C3362700][17]: (def: 00000183C335EDC0) IROP_STORE (null)
    [00000183C3362E00][17]: (inst: 00000183C3362700) IROP_RET (null)
node[18] <RETURN>
    [00000183C3363080][18]: (li: 0x0{0}) IROP_STORE (null)
    [00000183C33627C0][18]: (inst: 00000183C3363080) IROP_RET (null)
node[19] <ANY> -> 20
    (no instructions)
node[20] <ANY> -> 11(JMP)
    [00000183C3362E80][20]: (null) IROP_AINC (def: 00000183C335F790)
>>>>> SUMMARY <<<<<
node count: 21
node arr size: 32
edge count: 28
edge arr size: 32
instruction count: 35
memory size: 5552 bytes

    DecimalFormat:
      [0](00000183C33587F0): import, FROM java.text
    basic:
      [0](00000183C335F330): def method, Access: public static, Return: JLT_RWD_VOID

===== CONTROL FLOW GRAPH =====
(empty)

    InputMismatchException:
      [0](00000183C3358860): import, FROM java.util
    r4:
      [0](00000183C335EE30): def member var, Access: No Modifier, Type: JLT_RWD_SHORT
    r2:
      [0](00000183C335ED50): def member var, Access: No Modifier, Type: JLT_RWD_INT
    logic:
      [0](00000183C335EEA0): def method, Access: No Modifier, Return: JLT_RWD_VOID

===== CONTROL FLOW GRAPH =====
node[0] (entry point) <TEST> -> 2(FALSE) -> 1(TRUE)
    [00000183C335DF10][0]: (li: 0x1{1}) IROP_STORE (null)
    [00000183C335E510][0]: (null) IROP_TEST (null)
node[1] <TEST> -> 4(FALSE) -> 3(TRUE)
    [00000183C335EA50][1]: (inst: 00000183C335DF10) IROP_PHI (inst: 00000183C335EB90)
    [00000183C335DF50][1]: (null) IROP_TEST (null)
node[2] <ANY> -> 1
    [00000183C335EB90][2]: (li: 0x2{2}) IROP_STORE (null)
node[3] <ANY>
    [00000183C335EA90][3]: (inst: 00000183C335EA50) IROP_PHI (inst: 00000183C335E490)
node[4] <ANY> -> 3
    [00000183C335E490][4]: (li: 0x3{3}) IROP_ADD (li: 0x4{4})
>>>>> SUMMARY <<<<<
node count: 5
node arr size: 8
edge count: 6
edge arr size: 8
instruction count: 7
memory size: 1248 bytes

    r3:
      [0](00000183C335EDC0): def member var, Access: No Modifier, Type: JLT_RWD_INT
    loop_do_while:
      [0](00000183C335F040): def method, Access: No Modifier, Return: JLT_RWD_VOID

===== CONTROL FLOW GRAPH =====
node[0] (entry point) <ANY> -> 1
    [00000183C3362D40][0]: (def: 00000183C335F6B0) <- (null) IROP_INIT (null)
    [00000183C3362A00][0]: (def: 00000183C3364190) <- (null) IROP_INIT (null)
node[1] <ANY> -> 4
    (no instructions)
node[2] <TEST> -> 1(TRUE) -> 3(FALSE)
    [00000183C3362540][2]: (def: 00000183C335F6B0) IROP_GT (def: 00000183C3364190)
    [00000183C3362600][2]: (null) IROP_TEST (null)
node[3] <ANY>
    (no instructions)
node[4] <TEST> -> 5(TRUE) -> 6(FALSE)
    [00000183C33625C0][4]: (li: 0x4{4}) IROP_EQ (li: 0x9{9})
    [00000183C3362BC0][4]: (null) IROP_TEST (null)
node[5] <BREAK> -> 3(JMP) -> 6
    [00000183C33628C0][5]: (null) IROP_JMP (null)
node[6] <TEST> -> 7(TRUE) -> 9(FALSE)
    [00000183C3363040][6]: (null) IROP_ADEC (def: 00000183C335F6B0)
    [00000183C3363340][6]: (li: 0x6{6}) IROP_GE (li: 0x2{2})
    [00000183C3363100][6]: (null) IROP_TEST (null)
node[7] <ANY> -> 8
    (no instructions)
node[8] <CONTINUE> -> 2(JMP) -> 9
    [00000183C3362C00][8]: (null) IROP_JMP (null)
node[9] <ANY> -> 2
    (no instructions)
>>>>> SUMMARY <<<<<
node count: 10
node arr size: 16
edge count: 14
edge arr size: 16
instruction count: 11
memory size: 2352 bytes

    loop_for:
      [0](00000183C335F3A0): def method, Access: No Modifier, Return: JLT_RWD_VOID

===== CONTROL FLOW GRAPH =====
node[0] (entry point) <ANY> -> 1
    [00000183C3362FC0][0]: (def: 00000183C3364970) <- (null) IROP_INIT (null)
    [00000183C3363240][0]: (def: 00000183C3363EF0) <- (null) IROP_INIT (null)
    [00000183C3363200][0]: (li: 0x0{0}) IROP_STORE (null)
    [00000183C3362A40][0]: (def: 00000183C3364B30) <- (inst: 00000183C3363200) IROP_ASN (null)
    [00000183C3362A80][0]: (def: 00000183C3364AC0) <- (null) IROP_INIT (null)
node[1] <TEST> -> 5(FALSE) -> 4(TRUE)
    [00000183C3362680][1]: (def: 00000183C3364B30) IROP_GT (def: 00000183C3364AC0)
    [00000183C3362900][1]: (null) IROP_TEST (null)
node[2] <ANY> -> 4
    [00000183C3362CC0][2]: (inst: 00000183C33631C0) IROP_PHI (inst: 00000183C3362840)
node[3] <ANY> -> 2
    [00000183C3362840][3]: (def: 00000183C3363EF0) IROP_STORE (null)
node[4] <TEST> -> 7(FALSE) -> 8(TRUE)
    [00000183C3362800][4]: (inst: 00000183C3362680) IROP_PHI (inst: 00000183C3362CC0)
    [00000183C3362B80][4]: (null) IROP_TEST (null)
node[5] <ANY> -> 3(TRUE) -> 2(FALSE)
    [00000183C33631C0][5]: (li: 0x2{2}) IROP_STORE (null)
    [00000183C3362880][5]: (null) IROP_TEST (null)
node[6] <ANY> -> 1(JMP)
    [00000183C33632C0][6]: (null) IROP_AINC (def: 00000183C3364B30)
    [00000183C3362EC0][6]: (null) IROP_AINC (def: 00000183C3364AC0)
    [00000183C3362D80][6]: (null) IROP_AINC (def: 00000183C3363EF0)
node[7] <ANY>
    (no instructions)
node[8] <ANY> -> 9
    (no instructions)
node[9] <TEST> -> 10(TRUE) -> 11(FALSE)
    [00000183C3362940][9]: (li: 0x4{4}) IROP_EQ (li: 0x9{9})
    [00000183C3362980][9]: (null) IROP_TEST (null)
node[10] <BREAK> -> 7(JMP) -> 11
    [00000183C3363280][10]: (null) IROP_JMP (null)
node[11] <TEST> -> 12(TRUE) -> 14(FALSE)
    [00000183C33629C0][11]: (null) IROP_ADEC (def: 00000183C3364970)
    [00000183C33630C0][11]: (li: 0x6{6}) IROP_GE (li: 0x2{2})
    [00000183C3362F00][11]: (null) IROP_TEST (null)
node[12] <ANY> -> 13
    (no instructions)
node[13] <CONTINUE> -> 6(JMP) -> 14
    [00000183C3362AC0][13]: (null) IROP_JMP (null)
node[14] <ANY> -> 6
    (no instructions)
>>>>> SUMMARY <<<<<
node count: 15
node arr size: 16
edge count: 21
edge arr size: 32
instruction count: 23
memory size: 3880 bytes

    Scanner:
      [0](00000183C33508D0): import, FROM java.util
===== LITERALS =====
memory: 464 bytes
load factor: 40.91%
longest chain: 1
    1:
      [0](00000183C335F410): number,1
    9:
      [0](00000183C335F640): number,9
    7:
      [0](00000183C335F480): number,7
    5:
      [0](00000183C335F720): number,5
    0:
      [0](00000183C335F1E0): number,0
    3:
      [0](00000183C335F170): number,3
    2:
      [0](00000183C335F100): number,2
    6:
      [0](00000183C335F2C0): number,6
    4:
      [0](00000183C335F800): number,4
===== LOOKUP STACK =====
(lookup stack is empty)
===== DEFINITION POOL =====
[0](00000183C3364970): def var, Access: No Modifier, Type: JLT_RWD_INT
[1](00000183C3363EF0): def var, Access: No Modifier, Type: JLT_RWD_INT
[2](00000183C3364B30): def var, Access: No Modifier, Type: JLT_RWD_INT
[3](00000183C3364AC0): def var, Access: No Modifier, Type: JLT_RWD_INT
[4](00000183C335F6B0): def var, Access: No Modifier, Type: JLT_RWD_INT
[5](00000183C3364190): def var, Access: No Modifier, Type: JLT_RWD_INT
[6](00000183C335F790): def var, Access: No Modifier, Type: JLT_RWD_INT
[7](00000183C335F250): def var, Access: No Modifier, Type: JLT_RWD_INT
[8](00000183C335F4F0): def var, Access: No Modifier, Type: JLT_RWD_SHORT
[9](00000183C335F560): def var, Access: No Modifier, Type: JLT_RWD_INT
[10](00000183C335F5D0): def var, Access: No Modifier, Type: JLT_RWD_INT
>>>>> SUMMARY <<<<<
definition count: 11
pool memory size: 1144 bytes
Press any key to continue . . .
