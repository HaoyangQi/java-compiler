===== COMPILER RUNTIME REPORT =====
Language version: 1
Reserved word:
    count: 50
    memory: 4424 bytes
    load factor: 14.16%
    longest chain: 1
Expression static data size: 1072 bytes
Error static data size: 574 bytes
===== END OF REPORT =====

File 1: ./test/simple.txt
===== ABSTRACT SYNTAX TREE =====
Compilation Unit
  Package Declaration
    Name
      Unit: mypack
  Import Declaration (On-demand: false)
    Name
      Unit: java
      Unit: text
      Unit: DecimalFormat
  Import Declaration (On-demand: false)
    Name
      Unit: java
      Unit: util
      Unit: InputMismatchException
  Import Declaration (On-demand: false)
    Name
      Unit: java
      Unit: util
      Unit: Scanner
  Import Declaration (On-demand: true)
    Name
      Unit: somepackage
  Top Level: No Modifier
    Class Declaration: MyPackageClass
      Class Extends
        Class Type
          Unit: C1
      Class Implements
        Interface Type List
          Interface Type
            Unit: C2
          Interface Type
            Unit: C3
      Class Body
        Class Body Declaration: No Modifier
          Type: JLT_RWD_INT
          Variable Declarators
            Variable Declarator: r2
              Expression
                Primary
                  1
                Primary
                  2
                OP[19]: OPID_GREAT -> JLT_SYM_ANGLE_BRACKET_CLOSE ">"
                Primary
                  3
                Primary
                  4
                Primary
                  5
                OP[9]: OPID_MUL -> JLT_SYM_ASTERISK "*"
                OP[12]: OPID_ADD -> JLT_SYM_PLUS "+"
                Primary
                  6
                Primary
                  7
                OP[13]: OPID_SUB -> JLT_SYM_MINUS "-"
                OP[30]: OPID_TERNARY_2 -> JLT_SYM_COLON ":"
                OP[29]: OPID_TERNARY_1 -> JLT_SYM_QUESTION "?"
        Class Body Declaration: No Modifier
          Type: JLT_RWD_INT
          Variable Declarators
            Variable Declarator: r3
              Expression
                Primary
                  0
        Class Body Declaration: No Modifier
          Type: JLT_RWD_SHORT
          Variable Declarators
            Variable Declarator: r4
        Class Body Declaration: No Modifier
          Type: JLT_RWD_VOID
          Method Declaration
            Method Header: logic
            Method Body
              Block
                Expression Statement
                  Expression
                    Primary
                      1
                    Primary
                      2
                    OP[28]: OPID_LOGIC_OR -> JLT_SYM_LOGIC_OR "||"
                    Primary
                      3
                    Primary
                      4
                    OP[12]: OPID_ADD -> JLT_SYM_PLUS "+"
                    OP[28]: OPID_LOGIC_OR -> JLT_SYM_LOGIC_OR "||"
        Class Body Declaration: private
          Type: JLT_RWD_INT
          Method Declaration
            Method Header: calc
              Formal Parameter List
                Formal Parameter: x
                  Type: JLT_RWD_INT
                Formal Parameter: y
                  Type: JLT_RWD_INT
                Formal Parameter: r2
                  Type: JLT_RWD_SHORT
            Method Body
              Block
                While Statement
                  Expression
                    Primary
                      x
                    Primary
                      y
                    OP[19]: OPID_GREAT -> JLT_SYM_ANGLE_BRACKET_CLOSE ">"
                  Block
                    If Statement
                      Expression
                        Primary
                          4
                        Primary
                          9
                        OP[22]: OPID_EQ -> JLT_SYM_RELATIONAL_EQUAL "=="
                      Break Statement: (null)
                    Expression Statement
                      Expression
                        Primary
                          x
                        OP[2]: OPID_POST_DEC -> JLT_SYM_DECREMENT "--"
                    If Statement
                      Expression
                        Primary
                          6
                        Primary
                          2
                        OP[20]: OPID_GREAT_EQ -> JLT_SYM_GREATER_EQUAL ">="
                      Block
                        Continue Statement: (null)
                If Statement
                  Expression
                    Primary
                      2
                    Primary
                      1
                    OP[19]: OPID_GREAT -> JLT_SYM_ANGLE_BRACKET_CLOSE ">"
                  Block
                    Expression Statement
                      Expression
                        Primary
                          x
                        Primary
                          y
                        OP[12]: OPID_ADD -> JLT_SYM_PLUS "+"
                    Expression Statement
                      Expression
                        Primary
                          r3
                        Primary
                          r2
                        Primary
                          6
                        OP[13]: OPID_SUB -> JLT_SYM_MINUS "-"
                        Primary
                          y
                        OP[12]: OPID_ADD -> JLT_SYM_PLUS "+"
                        OP[31]: OPID_ASN -> JLT_SYM_EQUAL "="
                    Return Statement
                      Expression
                        Primary
                          3
                  If Statement
                    Expression
                      Primary
                        r2
                      Primary
                        x
                      OP[17]: OPID_LESS -> JLT_SYM_ANGLE_BRACKET_OPEN "<"
                    Block
                      Variable Declaration
                        Local Variable Declaration
                          Type: JLT_RWD_INT
                          Variable Declarators
                            Variable Declarator: tmp
                              Expression
                                Primary
                                  9
                      Expression Statement
                        Expression
                          Primary
                            y
                          Primary
                            2
                          OP[32]: OPID_ADD_ASN -> JLT_SYM_ADD_ASSIGNMENT "+="
                      Variable Declaration
                        Local Variable Declaration
                          Type: JLT_RWD_INT
                          Variable Declarators
                            Variable Declarator: tmp2
                      Expression Statement
                        Expression
                          Primary
                            tmp
                          Primary
                            tmp
                          Primary
                            y
                          Primary
                            9
                          OP[9]: OPID_MUL -> JLT_SYM_ASTERISK "*"
                          OP[13]: OPID_SUB -> JLT_SYM_MINUS "-"
                          OP[31]: OPID_ASN -> JLT_SYM_EQUAL "="
                      Return Statement
                        Expression
                          Primary
                            tmp2
                    Block
                      Return Statement
                        Expression
                          Primary
                            r3
                While Statement
                  Expression
                    Primary
                      x
                    Primary
                      y
                    OP[17]: OPID_LESS -> JLT_SYM_ANGLE_BRACKET_OPEN "<"
                  Block
                    Expression Statement
                      Expression
                        Primary
                          x
                        OP[1]: OPID_POST_INC -> JLT_SYM_INCREMENT "++"
                Return Statement
                  Expression
                    Primary
                      0
        Class Body Declaration: No Modifier
          Type: JLT_RWD_VOID
          Method Declaration
            Method Header: loop_do_while
            Method Body
              Block
                Variable Declaration
                  Local Variable Declaration
                    Type: JLT_RWD_INT
                    Variable Declarators
                      Variable Declarator: x
                Variable Declaration
                  Local Variable Declaration
                    Type: JLT_RWD_INT
                    Variable Declarators
                      Variable Declarator: y
                Do-While Statement
                  Block
                    If Statement
                      Expression
                        Primary
                          4
                        Primary
                          9
                        OP[22]: OPID_EQ -> JLT_SYM_RELATIONAL_EQUAL "=="
                      Break Statement: (null)
                    Expression Statement
                      Expression
                        Primary
                          x
                        OP[2]: OPID_POST_DEC -> JLT_SYM_DECREMENT "--"
                    If Statement
                      Expression
                        Primary
                          6
                        Primary
                          2
                        OP[20]: OPID_GREAT_EQ -> JLT_SYM_GREATER_EQUAL ">="
                      Block
                        Continue Statement: (null)
                  Expression
                    Primary
                      x
                    Primary
                      y
                    OP[19]: OPID_GREAT -> JLT_SYM_ANGLE_BRACKET_CLOSE ">"
        Class Body Declaration: No Modifier
          Type: JLT_RWD_VOID
          Method Declaration
            Method Header: loop_for
            Method Body
              Block
                Variable Declaration
                  Local Variable Declaration
                    Type: JLT_RWD_INT
                    Variable Declarators
                      Variable Declarator: x
                Variable Declaration
                  Local Variable Declaration
                    Type: JLT_RWD_INT
                    Variable Declarators
                      Variable Declarator: y
                For Statement
                  For Initialization
                    Local Variable Declaration
                      Type: JLT_RWD_INT
                      Variable Declarators
                        Variable Declarator: a
                          Expression
                            Primary
                              0
                        Variable Declarator: b
                  Expression
                    Primary
                      a
                    Primary
                      b
                    OP[19]: OPID_GREAT -> JLT_SYM_ANGLE_BRACKET_CLOSE ">"
                    Primary
                      2
                    Primary
                      y
                    OP[27]: OPID_LOGIC_AND -> JLT_SYM_LOGIC_AND "&&"
                    OP[28]: OPID_LOGIC_OR -> JLT_SYM_LOGIC_OR "||"
                  For Update
                    Expression List
                      Expression
                        Primary
                          a
                        OP[1]: OPID_POST_INC -> JLT_SYM_INCREMENT "++"
                      Expression
                        Primary
                          b
                        OP[1]: OPID_POST_INC -> JLT_SYM_INCREMENT "++"
                      Expression
                        Primary
                          y
                        OP[1]: OPID_POST_INC -> JLT_SYM_INCREMENT "++"
                  Block
                    If Statement
                      Expression
                        Primary
                          4
                        Primary
                          9
                        OP[22]: OPID_EQ -> JLT_SYM_RELATIONAL_EQUAL "=="
                      Break Statement: (null)
                    Expression Statement
                      Expression
                        Primary
                          x
                        OP[2]: OPID_POST_DEC -> JLT_SYM_DECREMENT "--"
                    If Statement
                      Expression
                        Primary
                          6
                        Primary
                          2
                        OP[20]: OPID_GREAT_EQ -> JLT_SYM_GREATER_EQUAL ">="
                      Block
                        Continue Statement: (null)
        Class Body Declaration: public static
          Type: JLT_RWD_VOID
          Method Declaration
            Method Header: basic
            Method Body
              Block
===== ON-DEMAND IMPORT PACKAGES =====
memory: 120 bytes
load factor: 9.09%
longest chain: 1
    somepackage
===== MEMBER INITIALIZATION =====

===== CONTROL FLOW GRAPH =====
node[0] (entry point) <ANY> -> 1
    [0000016E8703E350][0]: (li: 0x1{1}) IROP_GT (li: 0x2{2})
    [0000016E8703DF10][0]: (li: 0x4{4}) IROP_MUL (li: 0x5{5})
    [0000016E8703E0D0][0]: (li: 0x3{3}) IROP_ADD (inst: 0000016E8703DF10)
    [0000016E8703E450][0]: (li: 0x6{6}) IROP_SUB (li: 0x7{7})
    [0000016E8703E590][0]: (inst: 0000016E8703E0D0) IROP_TB (inst: 0000016E8703E450)
    [0000016E8703E850][0]: (inst: 0000016E8703E350) IROP_TC (inst: 0000016E8703E590)
    [0000016E8703E890][0]: (def: 0000016E8703ED50) <- (inst: 0000016E8703E850) IROP_ASN (null)
node[1] <ANY>
    [0000016E8703E010][1]: (li: 0x0{0}) IROP_STORE (null)
    [0000016E8703E110][1]: (def: 0000016E8703EDC0) <- (inst: 0000016E8703E010) IROP_ASN (null)
    [0000016E8703E950][1]: (def: 0000016E8703EE30) <- (null) IROP_INIT (null)
>>>>> SUMMARY <<<<<
node count: 2
node arr size: 2
edge count: 1
edge arr size: 2
instruction count: 10
memory size: 864 bytes
===== GLOBAL NAMES =====
memory: 560 bytes
load factor: 54.55%
longest chain: 3
    MyPackageClass:
      [0](0000016E87030940): class, Access: No Modifier extends C1 implements C2,C3
    calc:
      [0](0000016E8703EF10): def method, Access: private, Return: JLT_RWD_INT

===== CONTROL FLOW GRAPH =====
node[0] (entry point) <TEST> -> 1(FALSE) -> 2(TRUE)
    [0000016E8703E6D0][0]: (def: 0000016E8703F640) IROP_GT (def: 0000016E8703F800)
    [0000016E8703EA90][0]: (null) IROP_TEST (null)
node[1] <TEST> -> 7(TRUE) -> 9(FALSE)
    [0000016E8703E990][1]: (li: 0x2{2}) IROP_GT (li: 0x1{1})
    [0000016E8703E190][1]: (null) IROP_TEST (null)
node[2] <TEST> -> 3(TRUE) -> 4(FALSE)
    [0000016E8703EA10][2]: (li: 0x4{4}) IROP_EQ (li: 0x9{9})
    [0000016E8703E4D0][2]: (null) IROP_TEST (null)
node[3] <BREAK> -> 1(JMP) -> 4
    [0000016E8703E310][3]: (null) IROP_JMP (null)
node[4] <TEST> -> 5(TRUE) -> 6(FALSE)
    [0000016E8703E8D0][4]: (null) IROP_ADEC (def: 0000016E8703F640)
    [0000016E8703EB10][4]: (li: 0x6{6}) IROP_GE (li: 0x2{2})
    [0000016E8703E690][4]: (null) IROP_TEST (null)
node[5] <CONTINUE> -> 0(JMP) -> 6
    [0000016E8703E210][5]: (null) IROP_JMP (null)
node[6] <ANY> -> 0(JMP)
    (no instructions)
node[7] <RETURN> -> 8
    [0000016E8703E3D0][7]: (def: 0000016E8703F640) IROP_ADD (def: 0000016E8703F800)
    [0000016E8703E410][7]: (def: 0000016E8703F2C0) IROP_SUB (li: 0x6{6})
    [0000016E8703E490][7]: (inst: 0000016E8703E410) IROP_ADD (def: 0000016E8703F800)
    [0000016E8703E750][7]: (def: 0000016E8703EDC0) <- (inst: 0000016E8703E490) IROP_ASN (null)
    [0000016E8703E510][7]: (li: 0x3{3}) IROP_STORE (null)
    [0000016E8703E910][7]: (inst: 0000016E8703E510) IROP_RET (null)
node[8] <TEST> -> 13(FALSE) -> 14(TRUE)
    [0000016E870426B0][8]: (def: 0000016E8703F640) IROP_LT (def: 0000016E8703F800)
    [0000016E87042930][8]: (null) IROP_TEST (null)
node[9] <TEST> -> 10(TRUE) -> 12(FALSE)
    [0000016E8703EB50][9]: (def: 0000016E8703F2C0) IROP_LT (def: 0000016E8703F640)
    [0000016E8703E9D0][9]: (null) IROP_TEST (null)
node[10] <RETURN> -> 11
    [0000016E8703EBD0][10]: (li: 0x9{9}) IROP_STORE (null)
    [0000016E8703E390][10]: (def: 0000016E8703F720) <- (inst: 0000016E8703EBD0) IROP_ASN (null)
    [0000016E87043130][10]: (def: 0000016E8703F800) <- (def: 0000016E8703F800) IROP_ADD (li: 0x2{2})
    [0000016E87042530][10]: (def: 0000016E8703F170) <- (null) IROP_INIT (null)
    [0000016E870428F0][10]: (def: 0000016E8703F800) IROP_MUL (li: 0x9{9})
    [0000016E87043230][10]: (def: 0000016E8703F720) IROP_SUB (inst: 0000016E870428F0)
    [0000016E87042870][10]: (def: 0000016E8703F720) <- (inst: 0000016E87043230) IROP_ASN (null)
    [0000016E87042D70][10]: (def: 0000016E8703F170) IROP_STORE (null)
    [0000016E87042A30][10]: (inst: 0000016E87042D70) IROP_RET (null)
node[11] <ANY> -> 8
    (no instructions)
node[12] <RETURN> -> 11
    [0000016E870427B0][12]: (def: 0000016E8703EDC0) IROP_STORE (null)
    [0000016E87042770][12]: (inst: 0000016E870427B0) IROP_RET (null)
node[13] <RETURN>
    [0000016E870423F0][13]: (li: 0x0{0}) IROP_STORE (null)
    [0000016E87042B70][13]: (inst: 0000016E870423F0) IROP_RET (null)
node[14] <ANY> -> 8(JMP)
    [0000016E87042DF0][14]: (null) IROP_AINC (def: 0000016E8703F640)
>>>>> SUMMARY <<<<<
node count: 15
node arr size: 16
edge count: 22
edge arr size: 32
instruction count: 35
memory size: 4608 bytes

    DecimalFormat:
      [0](0000016E870387F0): import, FROM java.text
    basic:
      [0](0000016E8703F100): def method, Access: public static, Return: JLT_RWD_VOID

===== CONTROL FLOW GRAPH =====
(empty)

    InputMismatchException:
      [0](0000016E87038860): import, FROM java.util
    r4:
      [0](0000016E8703EE30): def member var, Access: No Modifier, Type: JLT_RWD_SHORT
    r2:
      [0](0000016E8703ED50): def member var, Access: No Modifier, Type: JLT_RWD_INT
    logic:
      [0](0000016E8703EEA0): def method, Access: No Modifier, Return: JLT_RWD_VOID

===== CONTROL FLOW GRAPH =====
node[0] (entry point) <TEST> -> 2(FALSE) -> 1(TRUE)
    [0000016E8703E150][0]: (li: 0x1{1}) IROP_STORE (null)
    [0000016E8703E2D0][0]: (null) IROP_TEST (null)
node[1] <TEST> -> 4(FALSE) -> 3(TRUE)
    [0000016E8703EC10][1]: (inst: 0000016E8703E150) IROP_PHI (inst: 0000016E8703E550)
    [0000016E8703EC50][1]: (null) IROP_TEST (null)
node[2] <ANY> -> 1
    [0000016E8703E550][2]: (li: 0x2{2}) IROP_STORE (null)
node[3] <ANY>
    [0000016E8703E610][3]: (inst: 0000016E8703EC10) IROP_PHI (inst: 0000016E8703DED0)
node[4] <ANY> -> 3
    [0000016E8703DED0][4]: (li: 0x3{3}) IROP_ADD (li: 0x4{4})
>>>>> SUMMARY <<<<<
node count: 5
node arr size: 8
edge count: 6
edge arr size: 8
instruction count: 7
memory size: 1248 bytes

    r3:
      [0](0000016E8703EDC0): def member var, Access: No Modifier, Type: JLT_RWD_INT
    loop_do_while:
      [0](0000016E8703F040): def method, Access: No Modifier, Return: JLT_RWD_VOID

===== CONTROL FLOW GRAPH =====
node[0] (entry point) <ANY> -> 1
    [0000016E87042430][0]: (def: 0000016E8703F250) <- (null) IROP_INIT (null)
    [0000016E870427F0][0]: (def: 0000016E87044A90) <- (null) IROP_INIT (null)
node[1] <ANY> -> 4
    (no instructions)
node[2] <TEST> -> 1(TRUE) -> 3(FALSE)
    [0000016E87042EB0][2]: (def: 0000016E8703F250) IROP_GT (def: 0000016E87044A90)
    [0000016E870428B0][2]: (null) IROP_TEST (null)
node[3] <ANY>
    (no instructions)
node[4] <TEST> -> 5(TRUE) -> 6(FALSE)
    [0000016E87042470][4]: (li: 0x4{4}) IROP_EQ (li: 0x9{9})
    [0000016E87042570][4]: (null) IROP_TEST (null)
node[5] <BREAK> -> 3(JMP) -> 6
    [0000016E87043270][5]: (null) IROP_JMP (null)
node[6] <TEST> -> 7(TRUE) -> 8(FALSE)
    [0000016E87042630][6]: (null) IROP_ADEC (def: 0000016E8703F250)
    [0000016E87042830][6]: (li: 0x6{6}) IROP_GE (li: 0x2{2})
    [0000016E870429F0][6]: (null) IROP_TEST (null)
node[7] <CONTINUE> -> 2(JMP) -> 8
    [0000016E87042330][7]: (null) IROP_JMP (null)
node[8] <ANY> -> 2
    (no instructions)
>>>>> SUMMARY <<<<<
node count: 9
node arr size: 16
edge count: 13
edge arr size: 16
instruction count: 11
memory size: 2216 bytes

    loop_for:
      [0](0000016E8703F480): def method, Access: No Modifier, Return: JLT_RWD_VOID

===== CONTROL FLOW GRAPH =====
node[0] (entry point) <ANY> -> 1
    [0000016E87042BB0][0]: (def: 0000016E87043E50) <- (null) IROP_INIT (null)
    [0000016E87042FF0][0]: (def: 0000016E870441D0) <- (null) IROP_INIT (null)
    [0000016E870424F0][0]: (li: 0x0{0}) IROP_STORE (null)
    [0000016E87042670][0]: (def: 0000016E87044160) <- (inst: 0000016E870424F0) IROP_ASN (null)
    [0000016E870429B0][0]: (def: 0000016E870447F0) <- (null) IROP_INIT (null)
node[1] <TEST> -> 5(FALSE) -> 4(TRUE)
    [0000016E87042AF0][1]: (def: 0000016E87044160) IROP_GT (def: 0000016E870447F0)
    [0000016E87042CB0][1]: (null) IROP_TEST (null)
node[2] <ANY> -> 4
    [0000016E87042EF0][2]: (inst: 0000016E87042970) IROP_PHI (inst: 0000016E87042A70)
node[3] <ANY> -> 2
    [0000016E87042A70][3]: (def: 0000016E870441D0) IROP_STORE (null)
node[4] <TEST> -> 7(FALSE) -> 8(TRUE)
    [0000016E87042370][4]: (inst: 0000016E87042AF0) IROP_PHI (inst: 0000016E87042EF0)
    [0000016E87042AB0][4]: (null) IROP_TEST (null)
node[5] <ANY> -> 3(TRUE) -> 2(FALSE)
    [0000016E87042970][5]: (li: 0x2{2}) IROP_STORE (null)
    [0000016E87042BF0][5]: (null) IROP_TEST (null)
node[6] <ANY> -> 1(JMP)
    [0000016E87042C30][6]: (null) IROP_AINC (def: 0000016E87044160)
    [0000016E87042FB0][6]: (null) IROP_AINC (def: 0000016E870447F0)
    [0000016E87042730][6]: (null) IROP_AINC (def: 0000016E870441D0)
node[7] <ANY>
    (no instructions)
node[8] <TEST> -> 9(TRUE) -> 10(FALSE)
    [0000016E87043030][8]: (li: 0x4{4}) IROP_EQ (li: 0x9{9})
    [0000016E87042B30][8]: (null) IROP_TEST (null)
node[9] <BREAK> -> 7(JMP) -> 10
    [0000016E87042C70][9]: (null) IROP_JMP (null)
node[10] <TEST> -> 11(TRUE) -> 12(FALSE)
    [0000016E87042CF0][10]: (null) IROP_ADEC (def: 0000016E87043E50)
    [0000016E870424B0][10]: (li: 0x6{6}) IROP_GE (li: 0x2{2})
    [0000016E870426F0][10]: (null) IROP_TEST (null)
node[11] <CONTINUE> -> 6(JMP) -> 12
    [0000016E87043070][11]: (null) IROP_JMP (null)
node[12] <ANY> -> 6
    (no instructions)
>>>>> SUMMARY <<<<<
node count: 13
node arr size: 16
edge count: 19
edge arr size: 32
instruction count: 23
memory size: 3608 bytes

    Scanner:
      [0](0000016E870308D0): import, FROM java.util
===== LITERALS =====
memory: 464 bytes
load factor: 40.91%
longest chain: 1
    1:
      [0](0000016E8703F4F0): number,1
    9:
      [0](0000016E8703F6B0): number,9
    7:
      [0](0000016E8703F410): number,7
    5:
      [0](0000016E8703F330): number,5
    0:
      [0](0000016E8703F560): number,0
    3:
      [0](0000016E8703F3A0): number,3
    2:
      [0](0000016E8703F1E0): number,2
    6:
      [0](0000016E8703F5D0): number,6
    4:
      [0](0000016E8703F790): number,4
===== LOOKUP STACK =====
(lookup stack is empty)
===== DEFINITION POOL =====
[0](0000016E87043E50): def var, Access: No Modifier, Type: JLT_RWD_INT
[1](0000016E870441D0): def var, Access: No Modifier, Type: JLT_RWD_INT
[2](0000016E87044160): def var, Access: No Modifier, Type: JLT_RWD_INT
[3](0000016E870447F0): def var, Access: No Modifier, Type: JLT_RWD_INT
[4](0000016E8703F250): def var, Access: No Modifier, Type: JLT_RWD_INT
[5](0000016E87044A90): def var, Access: No Modifier, Type: JLT_RWD_INT
[6](0000016E8703F640): def var, Access: No Modifier, Type: JLT_RWD_INT
[7](0000016E8703F800): def var, Access: No Modifier, Type: JLT_RWD_INT
[8](0000016E8703F2C0): def var, Access: No Modifier, Type: JLT_RWD_SHORT
[9](0000016E8703F720): def var, Access: No Modifier, Type: JLT_RWD_INT
[10](0000016E8703F170): def var, Access: No Modifier, Type: JLT_RWD_INT
>>>>> SUMMARY <<<<<
definition count: 11
pool memory size: 1144 bytes
Press any key to continue . . .
