===== NUMBER LIBRARY TEST =====
max int64: 9223372036854775807
max uint64: 18446744073709551615
Hexadecimal Integer "0x123456789abcdef"
    raw: 0x123456789ABCDEF
    overflow: u8 | u16 | u32 | i8 | i16 | i32
    formatted: 81985529216486895

Hexadecimal Integer "0X123456789ABCDEF"
    raw: 0x123456789ABCDEF
    overflow: u8 | u16 | u32 | i8 | i16 | i32
    formatted: 81985529216486895

Hexadecimal Integer "0x123456789ABCDEF1234567890"
    raw: 0xABCDEF1234567890
    overflow: u8 | u16 | u32 | u64 | i8 | i16 | i32 | i64
    formatted: 12379813812177893520

Octal Integer "01234567"
    raw: 0x53977
    overflow: u8 | u16 | i8 | i16
    formatted: 342391

Octal Integer "01234567"
    raw: 0x53977
    overflow: u8 | u16 | i8 | i16
    formatted: 342391

Octal Integer "01234567111111122222223333333"
    raw: 0x12492524924DB6DB
    overflow: u8 | u16 | u32 | u64 | i8 | i16 | i32 | i64
    formatted: 1317625204986197723

Binary Integer "0b000101010101"
    raw: 0x155
    overflow: u8 | i8
    formatted: 341

Binary Integer "0B111000001010"
    raw: 0xE0A
    overflow: u8 | i8
    formatted: 3594

Decimal Integer "123456789"
    raw: 0x75BCD15
    overflow: u8 | u16 | i8 | i16
    formatted: 123456789

Decimal Integer "123456789l"
    raw: 0x4996030E
    overflow: u8 | u16 | i8 | i16
    formatted: 1234567950

Decimal Integer "9999999999999999999"
    raw: 0x8AC7230489E7FFFF
    overflow: u8 | u16 | u32 | i8 | i16 | i32 | i64
    formatted: 9999999999999999999

Decimal Integer "10000000000000000000"
    raw: 0x8AC7230489E80000
    overflow: u8 | u16 | u32 | i8 | i16 | i32 | i64
    formatted: 10000000000000000000

Decimal Integer "100000000000000000000"
    raw: 0x6BC75E2D63100000
    overflow: u8 | u16 | u32 | u64 | i8 | i16 | i32 | i64
    formatted: 7766279631452241920

Double Floating-Point ".0"
    raw: 0x0
    overflow:
    formatted: 0.00000000000000000000

Double Floating-Point ".0000"
    raw: 0x0
    overflow:
    formatted: 0.00000000000000000000

Double Floating-Point ".1234567890"
    raw: 0x3FBF9ADD3739635F
    overflow: man64
    formatted: 0.12345678899999999734

Double Floating-Point ".1234567890e10"
    raw: 0x41D26580B4800000
    overflow:
    formatted: 1234567890.00000000000000000000

Double Floating-Point ".1234567890e-10"
    raw: 0x3DAB25FFD62B4311
    overflow: man64
    formatted: 0.00000000001234567890

Double Floating-Point "0.0"
    raw: 0x0
    overflow:
    formatted: 0.00000000000000000000

Double Floating-Point "0.0000"
    raw: 0x0
    overflow:
    formatted: 0.00000000000000000000

Double Floating-Point "0.1234567890"
    raw: 0x3FBF9ADD3739635F
    overflow: man64
    formatted: 0.12345678899999999734

Double Floating-Point "0.1234567890e10"
    raw: 0x41D26580B4800000
    overflow:
    formatted: 1234567890.00000000000000000000

Double Floating-Point "0.1234567890e-10"
    raw: 0x3DAB25FFD62B4311
    overflow: man64
    formatted: 0.00000000001234567890

Double Floating-Point "987654321.0"
    raw: 0x41CD6F3458800000
    overflow:
    formatted: 987654321.00000000000000000000

Double Floating-Point "987654321.0000"
    raw: 0x41CD6F3458800000
    overflow:
    formatted: 987654321.00000000000000000000

Double Floating-Point "987654321.1234567890"
    raw: 0x41CD6F34588FCD6E
    overflow: man64
    formatted: 987654321.12345671653747558594

Double Floating-Point "987654321.1234567890e10"
    raw: 0x43E12210F71E4DD5
    overflow: man64
    formatted: 9876543211234568192.00000000000000000000

Double Floating-Point "987654321.1234567890e-10"
    raw: 0x3FB948B0FCE5D860
    overflow: man64
    formatted: 0.09876543211234567465

Float Floating-Point ".0"
    raw: 0x0
    overflow:
    formatted: 0.00000000000000000000

Float Floating-Point ".0000"
    raw: 0x0
    overflow:
    formatted: 0.00000000000000000000

Float Floating-Point ".1234567890"
    raw: 0x3DFCD6EA
    overflow: man32
    formatted: 0.12345679104328155518

Float Floating-Point ".1234567890e10"
    raw: 0x4E932C06
    overflow: man32
    formatted: 1234567936.00000000000000000000

Float Floating-Point ".1234567890e-10"
    raw: 0x2D592FFF
    overflow: man32
    formatted: 0.00000000001234567917

Float Floating-Point "0.0"
    raw: 0x0
    overflow:
    formatted: 0.00000000000000000000

Float Floating-Point "0.0000"
    raw: 0x0
    overflow:
    formatted: 0.00000000000000000000

Float Floating-Point "0.1234567890"
    raw: 0x3DFCD6EA
    overflow: man32
    formatted: 0.12345679104328155518

Float Floating-Point "0.1234567890e10"
    raw: 0x4E932C06
    overflow: man32
    formatted: 1234567936.00000000000000000000

Float Floating-Point "0.1234567890e-10"
    raw: 0x2D592FFF
    overflow: man32
    formatted: 0.00000000001234567917

Float Floating-Point "987654321.0"
    raw: 0x4E6B79A3
    overflow: man32
    formatted: 987654336.00000000000000000000

Float Floating-Point "987654321.0000"
    raw: 0x4E6B79A3
    overflow: man32
    formatted: 987654336.00000000000000000000

Float Floating-Point "987654321.1234567890"
    raw: 0x4E6B79A3
    overflow: man32
    formatted: 987654336.00000000000000000000

Float Floating-Point "987654321.1234567890e10"
    raw: 0x5F091088
    overflow: man32
    formatted: 9876543516404875264.00000000000000000000

Float Floating-Point "987654321.1234567890e-10"
    raw: 0x3DCA4588
    overflow: man32
    formatted: 0.09876543283462524414


===== COMPILER RUNTIME REPORT =====
Language version: 1
Reserved word:
    count: 50
    memory: 4424 bytes
    load factor: 14.16%
    longest chain: 1
Expression static data size: 1072 bytes
Error static data size: 538 bytes
===== END OF REPORT =====

File 1: ./test/simple.txt
instruction: OP[19] 2(2) 1(1)
instruction: OP[9] 5(5) 4(4)
instruction: OP[12] OP[9] 3(3)
instruction: OP[13] 7(7) 6(6)
instruction: OP[30] OP[13] OP[12]
instruction: OP[29] OP[30] OP[19]
0(0) instruction: OP[19] y x
instruction: OP[22] 9(9) 4(4)
instruction: OP[2] x
instruction: OP[20] 2(2) 6(6)
instruction: OP[19] 1(1) 2(2)
instruction: OP[12] y x
instruction: OP[13] 6(6) r2
instruction: OP[12] y OP[13]
instruction: OP[31] OP[12] r3
3(3) instruction: OP[17] x r2
9(9) instruction: OP[32] 2(2) y
instruction: OP[9] 9(9) y
instruction: OP[13] OP[9] tmp
instruction: OP[31] OP[13] tmp
tmp2 r3 instruction: OP[17] y x
instruction: OP[1] x
0(0) ===== ABSTRACT SYNTAX TREE =====
Compilation Unit
  Package Declaration
    Name
      Unit: mypack
  Import Declaration (On-demand: false)
    Name
      Unit: java
      Unit: text
      Unit: DecimalFormat
  Import Declaration (On-demand: false)
    Name
      Unit: java
      Unit: util
      Unit: InputMismatchException
  Import Declaration (On-demand: false)
    Name
      Unit: java
      Unit: util
      Unit: Scanner
  Import Declaration (On-demand: true)
    Name
      Unit: somepackage
  Top Level: No Modifier
    Class Declaration: MyPackageClass
      Class Extends
        Class Type
          Unit: C1
      Class Implements
        Interface Type List
          Interface Type
            Unit: C2
          Interface Type
            Unit: C3
      Class Body
        Class Body Declaration: No Modifier
          Type: JLT_RWD_INT
          Variable Declarators
            Variable Declarator: r2
              Expression
                Primary
                  1
                Primary
                  2
                OP[19]: OPID_GREAT -> JLT_SYM_ANGLE_BRACKET_CLOSE ">"
                Primary
                  3
                Primary
                  4
                Primary
                  5
                OP[9]: OPID_MUL -> JLT_SYM_ASTERISK "*"
                OP[12]: OPID_ADD -> JLT_SYM_PLUS "+"
                Primary
                  6
                Primary
                  7
                OP[13]: OPID_SUB -> JLT_SYM_MINUS "-"
                OP[30]: OPID_TERNARY_2 -> JLT_SYM_COLON ":"
                OP[29]: OPID_TERNARY_1 -> JLT_SYM_QUESTION "?"
        Class Body Declaration: No Modifier
          Type: JLT_RWD_INT
          Variable Declarators
            Variable Declarator: r3
              Expression
                Primary
                  0
        Class Body Declaration: No Modifier
          Type: JLT_RWD_SHORT
          Variable Declarators
            Variable Declarator: r4
        Class Body Declaration: private
          Type: JLT_RWD_INT
          Method Declaration
            Method Header: calc
              Formal Parameter List
                Formal Parameter: x
                  Type: JLT_RWD_INT
                Formal Parameter: y
                  Type: JLT_RWD_INT
                Formal Parameter: r2
                  Type: JLT_RWD_SHORT
            Method Body
              Block
                While Statement
                  Expression
                    Primary
                      x
                    Primary
                      y
                    OP[19]: OPID_GREAT -> JLT_SYM_ANGLE_BRACKET_CLOSE ">"
                  Block
                    If Statement
                      Expression
                        Primary
                          4
                        Primary
                          9
                        OP[22]: OPID_EQ -> JLT_SYM_RELATIONAL_EQUAL "=="
                      Break Statement: (null)
                    Expression Statement
                      Expression
                        Primary
                          x
                        OP[2]: OPID_POST_DEC -> JLT_SYM_DECREMENT "--"
                    If Statement
                      Expression
                        Primary
                          6
                        Primary
                          2
                        OP[20]: OPID_GREAT_EQ -> JLT_SYM_GREATER_EQUAL ">="
                      Block
                        Continue Statement: (null)
                If Statement
                  Expression
                    Primary
                      2
                    Primary
                      1
                    OP[19]: OPID_GREAT -> JLT_SYM_ANGLE_BRACKET_CLOSE ">"
                  Block
                    Expression Statement
                      Expression
                        Primary
                          x
                        Primary
                          y
                        OP[12]: OPID_ADD -> JLT_SYM_PLUS "+"
                    Expression Statement
                      Expression
                        Primary
                          r3
                        Primary
                          r2
                        Primary
                          6
                        OP[13]: OPID_SUB -> JLT_SYM_MINUS "-"
                        Primary
                          y
                        OP[12]: OPID_ADD -> JLT_SYM_PLUS "+"
                        OP[31]: OPID_ASN -> JLT_SYM_EQUAL "="
                    Return Statement
                      Expression
                        Primary
                          3
                  If Statement
                    Expression
                      Primary
                        r2
                      Primary
                        x
                      OP[17]: OPID_LESS -> JLT_SYM_ANGLE_BRACKET_OPEN "<"
                    Block
                      Variable Declaration
                        Local Variable Declaration
                          Type: JLT_RWD_INT
                          Variable Declarators
                            Variable Declarator: tmp
                              Expression
                                Primary
                                  9
                      Expression Statement
                        Expression
                          Primary
                            y
                          Primary
                            2
                          OP[32]: OPID_ADD_ASN -> JLT_SYM_ADD_ASSIGNMENT "+="
                      Variable Declaration
                        Local Variable Declaration
                          Type: JLT_RWD_INT
                          Variable Declarators
                            Variable Declarator: tmp2
                      Expression Statement
                        Expression
                          Primary
                            tmp
                          Primary
                            tmp
                          Primary
                            y
                          Primary
                            9
                          OP[9]: OPID_MUL -> JLT_SYM_ASTERISK "*"
                          OP[13]: OPID_SUB -> JLT_SYM_MINUS "-"
                          OP[31]: OPID_ASN -> JLT_SYM_EQUAL "="
                      Return Statement
                        Expression
                          Primary
                            tmp2
                    Block
                      Return Statement
                        Expression
                          Primary
                            r3
                While Statement
                  Expression
                    Primary
                      x
                    Primary
                      y
                    OP[17]: OPID_LESS -> JLT_SYM_ANGLE_BRACKET_OPEN "<"
                  Block
                    Expression Statement
                      Expression
                        Primary
                          x
                        OP[1]: OPID_POST_INC -> JLT_SYM_INCREMENT "++"
                Return Statement
                  Expression
                    Primary
                      0
        Class Body Declaration: public static
          Type: JLT_RWD_VOID
          Method Declaration
            Method Header: basic
            Method Body
              Block
===== ON-DEMAND IMPORT PACKAGES =====
memory: 120 bytes
load factor: 9.09%
longest chain: 1
    somepackage
===== MEMBER INITIALIZATION =====

===== CONTROL FLOW GRAPH =====
node[0] (entry point) <ANY> -> 1
    [0000019AD375AFD0]: (li: 0x1{1}) IROP_GT (li: 0x2{2})
    [0000019AD375AE10]: (li: 0x4{4}) IROP_MUL (li: 0x5{5})
    [0000019AD375B2D0]: (li: 0x3{3}) IROP_ADD (inst: 0000019AD375AE10)
    [0000019AD375B150]: (li: 0x6{6}) IROP_SUB (li: 0x7{7})
    [0000019AD375B290]: (inst: 0000019AD375B2D0) IROP_TB (inst: 0000019AD375B150)
    [0000019AD375AF10]: (inst: 0000019AD375AFD0) IROP_TC (inst: 0000019AD375B290)
    [0000019AD375B4D0]: (def: 0000019AD3758630) <- (inst: 0000019AD375AF10) IROP_ASN (null)
node[1] <ANY>
    [0000019AD375A990]: (li: 0x0{0}) IROP_NONE (null)
    [0000019AD375AC50]: (def: 0000019AD37586A0) <- (inst: 0000019AD375A990) IROP_ASN (null)
    [0000019AD375B650]: (def: 0000019AD375BB50) <- (null) IROP_INIT (null)
>>>>> SUMMARY <<<<<
node count: 2
node arr size: 2
edge count: 1
edge arr size: 2
instruction count: 10
memory size: 784 bytes
===== GLOBAL NAMES =====
memory: 464 bytes
load factor: 40.91%
longest chain: 3
    MyPackageClass:
      [0](0000019AD37585C0): class, Access: No Modifier extends C1 implements C2,C3
    calc:
      [0](0000019AD375BBC0): def method, Access: private, Return: JLT_RWD_INT

===== CONTROL FLOW GRAPH =====
node[0] (entry point) <TEST> -> 1(FALSE) -> 2(TRUE)
    [0000019AD375AC90]: (def: 0000019AD375C710) IROP_GT (def: 0000019AD375CA90)
    [0000019AD375B190]: (null) IROP_TEST (null)
node[1] <TEST> -> 7(TRUE) -> 9(FALSE)
    [0000019AD375B250]: (li: 0x2{2}) IROP_GT (li: 0x1{1})
    [0000019AD375AD10]: (null) IROP_TEST (null)
node[2] <TEST> -> 3(TRUE) -> 4(FALSE)
    [0000019AD375AF50]: (li: 0x4{4}) IROP_EQ (li: 0x9{9})
    [0000019AD375AD50]: (null) IROP_TEST (null)
node[3] <BREAK> -> 1(JMP) -> 4
    [0000019AD375B010]: (null) IROP_JMP (null)
node[4] <TEST> -> 5(TRUE) -> 6(FALSE)
    [0000019AD375AF90]: (null) IROP_ADEC (def: 0000019AD375C710)
    [0000019AD375B390]: (li: 0x6{6}) IROP_GE (li: 0x2{2})
    [0000019AD375B510]: (null) IROP_TEST (null)
node[5] <CONTINUE> -> 0(JMP) -> 6
    [0000019AD375A850]: (null) IROP_JMP (null)
node[6] <ANY> -> 0(JMP)
    (no instructions)
node[7] <RETURN> -> 8
    [0000019AD375B1D0]: (def: 0000019AD375C710) IROP_ADD (def: 0000019AD375CA90)
    [0000019AD375B050]: (def: 0000019AD375C860) IROP_SUB (li: 0x6{6})
    [0000019AD375AED0]: (inst: 0000019AD375B050) IROP_ADD (def: 0000019AD375CA90)
    [0000019AD375A890]: (def: 0000019AD37586A0) <- (inst: 0000019AD375AED0) IROP_ASN (null)
    [0000019AD375A8D0]: (li: 0x3{3}) IROP_NONE (null)
    [0000019AD375B450]: (inst: 0000019AD375A8D0) IROP_RET (null)
node[8] <TEST> -> 13(FALSE) -> 14(TRUE)
    [0000019AD375A790]: (def: 0000019AD375C710) IROP_LT (def: 0000019AD375CA90)
    [0000019AD375B490]: (null) IROP_TEST (null)
node[9] <TEST> -> 10(TRUE) -> 12(FALSE)
    [0000019AD375B690]: (def: 0000019AD375C860) IROP_LT (def: 0000019AD375C710)
    [0000019AD375AD90]: (null) IROP_TEST (null)
node[10] <RETURN> -> 11
    [0000019AD375B210]: (li: 0x9{9}) IROP_NONE (null)
    [0000019AD375B310]: (def: 0000019AD375C8D0) <- (inst: 0000019AD375B210) IROP_ASN (null)
    [0000019AD375B090]: (def: 0000019AD375CA90) <- (def: 0000019AD375CA90) IROP_ADD (li: 0x2{2})
    [0000019AD375B6D0]: (def: 0000019AD375CBE0) <- (null) IROP_INIT (null)
    [0000019AD375B350]: (def: 0000019AD375CA90) IROP_MUL (li: 0x9{9})
    [0000019AD375A910]: (def: 0000019AD375C8D0) IROP_SUB (inst: 0000019AD375B350)
    [0000019AD375B3D0]: (def: 0000019AD375C8D0) <- (inst: 0000019AD375A910) IROP_ASN (null)
    [0000019AD375B0D0]: (def: 0000019AD375CBE0) IROP_NONE (null)
    [0000019AD375B590]: (inst: 0000019AD375B0D0) IROP_RET (null)
node[11] <ANY> -> 8
    (no instructions)
node[12] <RETURN> -> 11
    [0000019AD375A7D0]: (def: 0000019AD37586A0) IROP_NONE (null)
    [0000019AD375B410]: (inst: 0000019AD375A7D0) IROP_RET (null)
node[13] <RETURN>
    [0000019AD375B610]: (li: 0x0{0}) IROP_NONE (null)
    [0000019AD375AC10]: (inst: 0000019AD375B610) IROP_RET (null)
node[14] <ANY> -> 8(JMP)
    [0000019AD375AA50]: (null) IROP_AINC (def: 0000019AD375C710)
>>>>> SUMMARY <<<<<
node count: 15
node arr size: 16
edge count: 22
edge arr size: 32
instruction count: 35
memory size: 4328 bytes

    DecimalFormat:
      [0](0000019AD374FDD0): import, FROM java.text
    basic:
      [0](0000019AD375BC30): def method, Access: public static, Return: JLT_RWD_VOID

===== CONTROL FLOW GRAPH =====
(empty)

    InputMismatchException:
      [0](0000019AD3750940): import, FROM java.util
    r4:
      [0](0000019AD375BB50): def member var, Access: No Modifier, Type: JLT_RWD_SHORT
    r2:
      [0](0000019AD3758630): def member var, Access: No Modifier, Type: JLT_RWD_INT
    r3:
      [0](0000019AD37586A0): def member var, Access: No Modifier, Type: JLT_RWD_INT
    Scanner:
      [0](0000019AD3758550): import, FROM java.util
===== LITERALS =====
memory: 464 bytes
load factor: 40.91%
longest chain: 1
    1:
      [0](0000019AD375C7F0): number,1
    9:
      [0](0000019AD375C780): number,9
    7:
      [0](0000019AD375C630): number,7
    5:
      [0](0000019AD375CD30): number,5
    0:
      [0](0000019AD375CB70): number,0
    3:
      [0](0000019AD375CB00): number,3
    2:
      [0](0000019AD375C570): number,2
    6:
      [0](0000019AD375C6A0): number,6
    4:
      [0](0000019AD375CA20): number,4
===== LOOKUP STACK =====
(lookup stack is empty)
===== DEFINITION POOL =====
[0](0000019AD375C710): def var, Access: No Modifier, Type: JLT_RWD_INT
[1](0000019AD375CA90): def var, Access: No Modifier, Type: JLT_RWD_INT
[2](0000019AD375C860): def var, Access: No Modifier, Type: JLT_RWD_SHORT
[3](0000019AD375C8D0): def var, Access: No Modifier, Type: JLT_RWD_INT
[4](0000019AD375CBE0): def var, Access: No Modifier, Type: JLT_RWD_INT
>>>>> SUMMARY <<<<<
definition count: 5
pool memory size: 520 bytes
Press any key to continue . . .
